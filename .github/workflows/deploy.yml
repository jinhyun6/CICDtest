name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '*.md'
      - 'LICENSE'
  workflow_dispatch:  # 수동 실행 가능

env:
  PROJECT_ID: cicdai-466905
  SERVICE_NAME: CICDtest
  SERVICE_NAME_LOWER: cicdtest
  REGION: asia-northeast3

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME_LOWER:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME_LOWER:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME_LOWER \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME_LOWER:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --format json > deployment-output.json
        
        # Extract service URL
        SERVICE_URL=$(cat deployment-output.json | jq -r '.status.url')
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
        echo "🚀 Deployed to: $SERVICE_URL"
    
    - name: Update deployment status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const status = '${{ job.status }}';
          const serviceUrl = '${{ env.SERVICE_URL }}';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: status === 'success' ? 'success' : 'failure',
            target_url: serviceUrl || '',
            description: status === 'success' ? `Deployed to ${serviceUrl}` : 'Deployment failed',
            context: 'Cloud Run Deployment'
          })
